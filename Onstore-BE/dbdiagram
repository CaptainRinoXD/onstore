// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table users {
    id integer [primary key]
    username varchar
    email varchar [unique]
    password varchar
    height integer
    weight integer
    created_at timestamp
    role_id varchar
    refresh_tokens text
}

Table roles {
    id interger [primary key]
    role enum
}

Ref: users.role_id > roles.id

Table orders {
    id integer [primary key]
    user_id integer
    shipment_id interger
    payment_id interger
    total decimal
    status varchar 
    created_at timestamp
    updated_at timestamp
}

Ref: orders.shipment_id < shipments.id
Ref: orders.payment_id - payment.id

Table order_items {
    id integer [primary key]
    order_id integer
    product_id integer
    quantity integer 
    price decimal
}

Table shipments {
    id integer [primary key]
    tracking_number String
    order_id interger
    Address String
    city String
    state String
    country enum
    zip_code varchar
}

Table payment {
  id interger [primary key]
  paymentMethod enum
  paymentDate timestamp
}

// Relationships
Ref: orders.user_id > users.id // an order belongs to a user
Ref: order_items.order_id > orders.id // an order has many items
Ref: order_items.product_id > products.id // an order item references a product

// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table products {
    id integer [primary key]
    name varchar [unique]
    description text
    price decimal
    category_id integer 
    type varchar
    size varchar 
    color varchar
    brand varchar
    material varchar
    stock integer 
    created_at timestamp
    images text // Array of image URLs
    discount_price decimal
    average_rating decimal
    care_instructions text
    release_date timestamp
}

Table categorys {
  id interger [primary key]
  category enum
}

Table reviews {
    id integer [primary key]
    username varchar
    rating integer 
    text text
    created_at timestamp
}

Ref: products.id < reviews.id
Ref: products.category_id > categorys.id

